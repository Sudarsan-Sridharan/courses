sudo: required

matrix:
  include:
    - os: linux
      dist: xenial
#    - os: osx
#      osx_image: xcode7.2

services:
  - docker

env:
  # You may want to update this to whatever the latest version is, or keep it
  # the same as your local machines. However, I have only tested it with 1.8.0+.
  # There should be a time in the future when this is not necessary - it is
  # explained in more detail below.
  DOCKER_COMPOSE_VERSION: 1.9.0

before_install:
  # update is required to update the repositories to see the new packages for
  # Docker.
  - uname -r
  - sudo apt-get update
  - sudo apt-get install apt-transport-https ca-certificates
  - sudo apt-key adv \
                   --keyserver hkp://ha.pool.sks-keyservers.net:80 \
                   --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
  - echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" | sudo tee /etc/apt/sources.list.d/docker.list
  - sudo apt-get update
  - apt-cache policy docker-engine
  - sudo apt-get update
  - sudo apt-get install docker-engine
  - sudo service docker start
  - sudo docker run hello-world

  # Now we can install the newer docker-engine which is required for the newer
  # docker-composer we will install next. The messy options are to force it to
  # be non-interactive (normally it asks you a bunch of config questions).
#  - sudo apt-get install -o Dpkg::Options::="--force-confold" --force-yes -y docker-engine
#  - sudo apt-get install linux-image-extra-$(uname -r) linux-image-extra-virtual

  # Print out the current docker-compose version. Once this reports 1.6+ then we
  # do not need the following steps.
#  - docker-compose --version

  # As of the writing of this script Travis has docker-compose v1.4.2, we need
  # to update it to 1.8+. $DOCKER_COMPOSE_VERSION is provide from the `env`
  # above.
#  - sudo rm /usr/local/bin/docker-compose
#  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
#  - chmod +x docker-compose
#  - sudo mv docker-compose /usr/local/bin

  # Check that docker-compose is now running the latest version (or at least the
  # one we specified). This is not to be confused with the version we printed
  # before doing the update.
#  - docker-compose --version

  # Setup your application stack. You may need to tweak these commands if you
  # doing out-of-the-ordinary docker-compose builds.
#  - docker-compose pull
#  - docker-compose build
#  - docker-compose up -d

before_script:
  - docker --version
  - docker-compose --version
  - docker images -a
  - docker ps -a
  - docker network ls
  - docker volume ls

script:
  - docker-compose up -d

after_script:
  - docker images -a
  - docker ps -a
  - docker network ls
  - docker volume ls