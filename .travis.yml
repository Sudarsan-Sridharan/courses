sudo: required

matrix:
  include:
#    - os: linux
#      dist: trusty
    - os: osx
      osx_image: xcode8.2

services:
  - docker
  - docker-compose

before_install:
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then system_profiler | grep Processor; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then system_profiler SPHardwareDataType | grep Cores:; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then system_profiler SPHardwareDataType | grep "  Memory:"; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then df -h; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then du -sh ~; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then du -sh *; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then hwprefs cpu_count; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then hwprefs memory_sizet; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then system_profiler SPSoftwareDataType; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cd $(brew --repo) &&  git fetch && git reset --hard origin/master; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask update; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew upgrade; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cleanup; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask cleanup; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew ls --versions; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask list; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install docker docker-compose boot2docker; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask install docker-toolbox; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew ls --versions; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask list; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew services start docker-machine; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then eval "$(docker-machine env dev)"; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then docker-machine create --driver "virtualbox" myBoxName; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then docker-machine start myBoxName; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then eval "$(docker-machine env myBoxName)"; fi

##  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then xcode-select –install && ruby -e “$(curl -fsSL && https://raw.githubusercontent.com/Homebrew/install/master/install)”; fi
##  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask install virtualbox && brew install docker && brew install boot2docker && boot2docker init && boot2docker up; fi
##  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew help ; fi
##  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" ; fi
##  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew help ; fi
##  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install caskroom/cask/brew-cask ; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew ls --versions; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install docker docker-compose docker-machine; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cask install virtualbox; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew services start docker-machine; fi
#  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then eval "$(docker-machine env dev)"; fi
##  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then docker-machine create -d virtualbox dev; fi
##  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then eval "$(docker-machine env dev)"; fi
##  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install docker; fi
##  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install boot2docker; fi
##  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then boot2docker init; fi
##  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then boot2docker up; fi

before_script:
  - docker --version
  - docker-compose --version
  - docker-machine --version
  - docker info
  - docker images -a
  - docker ps -a
  - docker network ls
  - docker volume ls

script:
  - docker-compose up -d

after_script:
  - docker images -a
  - docker ps -a
  - docker network ls
  - docker volume ls